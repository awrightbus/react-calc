{"version":3,"sources":["components/Button.js","components/Input.js","components/ClearButton.js","App.js","index.js"],"names":["Button","props","val","className","children","isNaN","onClick","handleClick","Input","ClearButton","handleClear","App","addToInput","setState","input","state","addZeroToInput","addDecimalToInput","indexOf","clearInput","add","prevNumber","operator","multiply","divide","subtract","equal","curNumber","parseInt","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fa5ef50b.chunk.js","sourcesContent":["import  React  from \"react\";\nimport './Button.css'\n\nconst Button = (props) => {\n    const isOperator = val => {\n        return !isNaN(val) ||  val === \".\" || val === \"=\";\n    }\n\n    return(\n        <div className={\n            `btn \n            ${isOperator(props.children)?\"\":\"operator\"}`}\n            onClick={() => props.handleClick(props.children) }\n        >\n            {props.children}\n        </div>\n    )\n}\n\nexport default Button","import React from \"react\";\nimport './Input.css'\n\nconst Input = (props) => {\n    return(\n        <div className=\"input\">\n            {props.children}\n        </div>\n    )\n}\n\n\n\nexport default Input","import React from 'react';\nimport './ClearButton.css';\n\n\nconst ClearButton = (props) => {\n    return(\n        <div \n        className=\"clear-btn\"\n        onClick={props.handleClear}\n        >\n            {props.children}\n        </div>\n    )\n}\n\n\nexport default ClearButton","import React from 'react';\nimport './App.css'\nimport Button from './components/Button.js'\nimport Input from './components/Input.js'\nimport ClearButton from './components/ClearButton.js'\n\nclass App extends React.Component{\n  constructor(){\n    super()\n    this.state = {\n      input: \"\",\n      prevNumber: \"\",\n      curNumber: \"\",\n      operator: \"\",\n    }\n\n  }\n\n//adds functionality that if i click on \n//one of the buttons it adds it to the input area\naddToInput = val => {\n  this.setState({input: this.state.input + val})\n}\n\n//adds functionality to 0 specifically to make sure \n//that it is not the first number inputted.\naddZeroToInput = (val) =>{\n  if(this.state.input !== \"\"){\n    return this.addToInput(val)\n  }\n}\n\n//add functionality for the decimal point\n//decimal points can only be present once\n// -1 means its not there \n\naddDecimalToInput = val =>{\n  if(this.state.input.indexOf(\".\") === -1){\n    return this.addToInput(val)\n  }\n}\n\n//adds functionality for the clear button\nclearInput = () => {\n  this.setState({input: \"\"});\n}\n\n//allows for add functionality \nadd = () => {\n\n  //storing preivous number so when we get the current number \n  // the program will still have access to both numbers\n  this.state.prevNumber = this.state.input;\n  //now were clearing out the inputs current state \n  //so we can enter the new number\n  this.setState({input: \"\"});\n  this.state.operator = \"plus\";\n}\n\nmultiply = () => {\n  this.state.prevNumber = this.state.input;\n  this.setState({input:\" \"});\n  this.state.operator = \"multiply\"\n}\n\ndivide = () => {\n  this.state.prevNumber = this.state.input;\n  this.setState({input: \" \"});\n  this.state.operator = \"divide\"\n}\n\nsubtract = () => {\n  this.state.prevNumber = this.state.input;\n  this.setState({input: \" \"});\n  this.state.operator = \"subtract\"\n}\n\nequal = () =>{\n  this.state.curNumber = this.state.input;\n  if(this.state.operator === \"plus\"){\n    this.setState({\n      input:parseInt(this.state.prevNumber) + parseInt(this.state.curNumber)\n    })\n  }\n  if(this.state.operator === \"multiply\"){\n    this.setState({\n      input: parseInt(this.state.prevNumber) * parseInt(this.state.curNumber)\n    })\n  }\n  if(this.state.operator === \"divide\"){\n    this.setState({\n      input: parseInt(this.state.prevNumber) / parseInt(this.state.curNumber)\n    })\n  }\n  if(this.state.operator === \"subtract\"){\n    this.state.curNumber = this.state.input;\n    this.setState({\n      input: parseInt(this.state.prevNumber) - parseInt(this.state.curNumber)\n    })\n  }\n}\n\n  render(){\n    \n\n    return(\n      <div>\n        <div className=\"calc-wrapper\">\n          <div className=\"row\">\n            <Input>{this.state.input}</Input>\n          </div>\n            <div className=\"row\">\n                  <Button handleClick={this.addToInput}>7</Button>\n                  <Button handleClick={this.addToInput}>8</Button>\n                  <Button handleClick={this.addToInput}>9</Button>\n                  <Button handleClick={this.divide}>/</Button>\n            </div>\n            <div className=\"row\">\n                  <Button handleClick={this.addToInput}>4</Button>\n                  <Button handleClick={this.addToInput}>5</Button>\n                  <Button handleClick={this.addToInput}>6</Button>\n                  <Button  handleClick={this.multiply}>*</Button>\n            </div>\n            <div className=\"row\">\n                  <Button handleClick={this.addToInput}>1</Button>\n                  <Button handleClick={this.addToInput}>2</Button>\n                  <Button handleClick={this.addToInput}>3</Button>\n                  <Button handleClick={this.add}>+</Button>\n            </div>\n            <div className=\"row\">\n                  <Button handleClick={this.addDecimalToInput}>.</Button>\n                  <Button handleClick={this.addZeroToInput}>0</Button>\n                  <Button handleClick={this.equal}>=</Button>\n                  <Button handleClick={this.divide}>-</Button>\n            </div>\n            <div className=\"row\">\n                  <ClearButton handleClear={this.clearInput}>Clear</ClearButton>\n\n            </div>\n          </div>\n      </div>\n    )\n  }\n}\n\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  \n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}